function test_add_key {
    # ssh-add -l | grep $1
    if [[ ! `ssh-add -l | grep $1` ]]
    then
        echo "adding key $1"
        ssh-add $1
    fi
}

PS1LSCOLORS=hxfxcxdxbxhghdabagacad
export LSCOLORS

# if emacs if available then use it
which emacs > /dev/null 2>&1
if [ $? -eq 0 ]; then
    EDITOR="emacs"
    export EDITOR
    if [ `uname` = "Darwin" ]; then
        alias emacs=/opt/local/bin/emacs
        alias docker_terminal="bash --login '/Applications/Docker/Docker Quickstart Terminal.app/Contents/Resources/Scripts/start.sh'"
        export PATH=/opt/local/bin:/opt/local/sbin:~/.cask/bin:$PATH
    fi
fi

PS_BLUE="\[\e[34;1m\]"
PS_LIGHT_RED="\[\033[1;31m\]"
PS_COLOR_RESET="\[\e[0m\]"

if [ -z "$PROMPT_HOST" ]; then
   PROMPT_HOST="\\h"
fi
if [ $TERM == "screen" ]; then
    SCREEN_PROMPT="${PS_LIGHT_RED}(SCN)${PS_COLOR_RESET}-"
fi

alias git-pretty-log="git log --decorate --all --oneline --graph"

# set up git-prompt if there the prompt functionality is available (via the .git-prompt and .git-completion).
if [ -e ~/.git-prompt.sh ]; then
    export GIT_PS1_SHOWCOLORHINTS=true
    export GIT_PS1_SHOWDIRTYSTATE=true
    export GIT_PS1_SHOWUPSTREAM="auto"

    source ~/.git-prompt.sh
    source ~/.git-completion.bash
fi

if [ -n "$DOCKER_HOST" ]; then
    PROMPT_DOCKER="-docker"
fi

PS1="\n${SCREEN_PROMPT}(${PS_BLUE}\u@${PROMPT_HOST}\[${PS_COLOR_RESET})-(${PS_BLUE}\$(date +%k:%M:%S)${PS_COLOR_RESET})-(\!)${PROMPT_DOCKER}${PS_LIGHT_RED}\$(__git_ps1 \"\\n(git:%s)\")\n${PS_COLOR_RESET}[${PS_BLUE}\w${PS_COLOR_RESET}] > "

pyclean () {
    echo "Recursively deleting *.py[co]"
    find . -type f -name "*.py[co]" -delete
    echo "Recursively deleting __pycache__"
    find . -type d -name "__pycache__" -delete
}

# add additional stuff to ~/.bash_local
source ~/.bash_local
